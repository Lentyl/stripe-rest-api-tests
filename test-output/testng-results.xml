<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="13" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-14T15:31:52 CEST" name="Default suite" finished-at="2022-06-14T15:32:06 CEST" duration-ms="13394">
    <groups>
    </groups>
    <test started-at="2022-06-14T15:31:52 CEST" name="Default test" finished-at="2022-06-14T15:32:06 CEST" duration-ms="13394">
      <class name="com.testcases.CustomerTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:52 CEST" name="setUp" finished-at="2022-06-14T15:31:52 CEST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createCustomerWithValidKey(java.util.Hashtable)[pri:1, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:53 CEST" name="createCustomerWithValidKey" data-provider="data" finished-at="2022-06-14T15:31:56 CEST" duration-ms="3024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{currency=PLN, phone=123456789, email=mariusz88@gmial.com, name=Mariusz Podgorski, description=Adding the new customer Mariusz Pdgorski to data base, balance=6000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerWithValidKey -->
        <test-method signature="createCustomerWithValidKey(java.util.Hashtable)[pri:1, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:56 CEST" name="createCustomerWithValidKey" data-provider="data" finished-at="2022-06-14T15:31:56 CEST" duration-ms="778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{currency=USD, phone=987654321, email=robert@wp.pl, name=Robert Materka, description=Adding the new customer Robert Materka to data base, balance=87650}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerWithValidKey -->
        <test-method signature="createCustomerWithValidKey(java.util.Hashtable)[pri:1, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:56 CEST" name="createCustomerWithValidKey" data-provider="data" finished-at="2022-06-14T15:31:57 CEST" duration-ms="795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{currency=EU, phone=657843891, email=michael88@wp.pl, name=Michael Jordan, description=Adding the new customer Michael Jordan to data base, balance=65430}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerWithValidKey -->
        <test-method signature="createCustomerWithInvalidKey(java.util.Hashtable)[pri:2, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:57 CEST" name="createCustomerWithInvalidKey" data-provider="data" finished-at="2022-06-14T15:31:58 CEST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{currency=PLN, phone=654789543, email=marek88@gmial.com, name=Marek Jaworski, description=Adding the new customer Mariusz Pdgorski to data base, balance=7000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerWithInvalidKey -->
        <test-method signature="listAllCustomers(java.util.Hashtable)[pri:3, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:58 CEST" name="listAllCustomers" data-provider="data" finished-at="2022-06-14T15:31:58 CEST" duration-ms="908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{testData=N/A}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listAllCustomers -->
        <test-method signature="searchExistingTwoCustomers(java.util.Hashtable)[pri:4, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:58 CEST" name="searchExistingTwoCustomers" data-provider="data" finished-at="2022-06-14T15:31:59 CEST" duration-ms="744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{testData=N/A}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchExistingTwoCustomers -->
        <test-method signature="searchCustomersWithValidQueryParameter(java.util.Hashtable)[pri:5, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:31:59 CEST" name="searchCustomersWithValidQueryParameter" data-provider="data" finished-at="2022-06-14T15:32:00 CEST" duration-ms="719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=krowa88@wp.pl, name=Marek Krowa}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCustomersWithValidQueryParameter -->
        <test-method signature="createCustomerWithInvalidPhoneNumber(java.util.Hashtable)[pri:6, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:00 CEST" name="createCustomerWithInvalidPhoneNumber" data-provider="data" finished-at="2022-06-14T15:32:01 CEST" duration-ms="733" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{phone=string, name=Marek Jaworski}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [200]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at com.testcases.CustomerTests.createCustomerWithInvalidPhoneNumber(CustomerTests.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerWithInvalidPhoneNumber -->
        <test-method signature="createCustomerWithInvalidEmail(java.util.Hashtable)[pri:7, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:01 CEST" name="createCustomerWithInvalidEmail" data-provider="data" finished-at="2022-06-14T15:32:01 CEST" duration-ms="670" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=marco88wp.pl, name=Marco Rubio}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [200]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at com.testcases.CustomerTests.createCustomerWithInvalidEmail(CustomerTests.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerWithInvalidEmail -->
        <test-method signature="getCustomersWithSpecifiedEmailAddress(java.util.Hashtable)[pri:8, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:01 CEST" name="getCustomersWithSpecifiedEmailAddress" data-provider="data" finished-at="2022-06-14T15:32:02 CEST" duration-ms="754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=mariusz88@gmial.com, name=Mariusz Podgorski}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCustomersWithSpecifiedEmailAddress -->
        <test-method signature="searchWithoutQueryParameter(java.util.Hashtable)[pri:9, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:02 CEST" name="searchWithoutQueryParameter" data-provider="data" finished-at="2022-06-14T15:32:03 CEST" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{testData=N/A}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithoutQueryParameter -->
        <test-method signature="createCustomerWithInvalidBalance(java.util.Hashtable)[pri:10, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:03 CEST" name="createCustomerWithInvalidBalance" data-provider="data" finished-at="2022-06-14T15:32:04 CEST" duration-ms="682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=Marek Jaworski, balance=string}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCustomerWithInvalidBalance -->
        <test-method signature="updateCustomer(java.util.Hashtable)[pri:11, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:04 CEST" name="updateCustomer" data-provider="data" finished-at="2022-06-14T15:32:04 CEST" duration-ms="811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{description=Updating customer Mariusz Pdgorski}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCustomer -->
        <test-method signature="deleteCustomer(java.util.Hashtable)[pri:12, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:04 CEST" name="deleteCustomer" data-provider="data" finished-at="2022-06-14T15:32:05 CEST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{testData=N/A}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCustomer -->
        <test-method signature="RetrieveCustomer(java.util.Hashtable)[pri:13, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:05 CEST" name="RetrieveCustomer" data-provider="data" finished-at="2022-06-14T15:32:06 CEST" duration-ms="785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{deleted=true, name=Mariusz Podgorski}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RetrieveCustomer -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testcases.CustomerTests@5bf22f18]" started-at="2022-06-14T15:32:06 CEST" name="tearDown" finished-at="2022-06-14T15:32:06 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testcases.CustomerTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
